# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
imports:
    - parameters/media_manager.yaml
    - parameters/image_filter.yaml

parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    _instanceof:
        App\Service\Media\MediaProviderInterface:
            tags:
                - { name: 'media.provider' }

        App\Service\Media\ImageManipulator\ImageFilterInterface:
            tags:
                - { name: 'image.filter' }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\EntityTimestampListener:
        tags:
            - { name: doctrine.event_listener, event: 'prePersist' }
            - { name: doctrine.event_listener, event: 'preUpdate' }

    App\EventListener\EntitySlugListener:
        tags:
            - { name: doctrine.event_listener, event: 'prePersist' }
            - { name: doctrine.event_listener, event: 'preUpdate' }

    App\EventListener\User\HasChangedPasswordListener:
        tags:
            - { name: doctrine.orm.entity_listener }

    App\EventListener\MediaListener:
        tags:
            - { name: doctrine.orm.entity_listener }

    App\Service\Media\Configurator\MediaConfigurator:
        arguments: ['%media_manager%']

    App\Service\Media\Configurator\ImageFilterConfigurator:
        arguments: ['%image_filter%']

    App\Service\Media\MediaManagerInterface:
        class: App\Service\Media\MediaManager
        arguments: [!tagged_locator { tag: 'media.provider', default_index_method: 'getName' }]

    App\Service\Media\ImageManipulator\ImageManipulatorInterface:
        class: App\Service\Media\ImageManipulator\ImageManipulator
        arguments: [!tagged_locator { tag: 'image.filter', default_index_method: 'getName' }]
